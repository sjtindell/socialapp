var app=angular.module("app",["ngRoute"]);angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(t,e){t.addPost=function(){t.postBody&&e.create({username:"sjtindellxxx",body:t.postBody}).success(function(e){t.posts.unshift(e),t.postBody=null})},e.fetch().success(function(e){t.posts=e})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,e){t.login=function(t,o){e.login(t,o).then(function(t){console.log(t)})}}]),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(e){return t.post("/api/posts",e)}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var e=this;e.getUser=function(){return t.get("/api/users",{headers:{"X-Auth":this.token}})},e.login=function(o,n){return t.post("/api/sessions",{username:o,password:n}).then(function(t){return e.token=t.data,e.getUser()})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImNvbnRyb2xsZXIuanMiLCJsb2dpbi5jdHJsLmpzIiwicG9zdHMuc3ZjLmpzIiwicm91dGVzLmpzIiwidXNlci5zdmMuanMiXSwibmFtZXMiOlsiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCJQb3N0c1N2YyIsImFkZFBvc3QiLCJwb3N0Qm9keSIsImNyZWF0ZSIsInVzZXJuYW1lIiwiYm9keSIsInN1Y2Nlc3MiLCJwb3N0IiwicG9zdHMiLCJ1bnNoaWZ0IiwiZmV0Y2giLCJVc2VyU3ZjIiwibG9naW4iLCJwYXNzd29yZCIsInRoZW4iLCJ1c2VyIiwiY29uc29sZSIsImxvZyIsInNlcnZpY2UiLCIkaHR0cCIsInRoaXMiLCJnZXQiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIndoZW4iLCJ0ZW1wbGF0ZVVybCIsInN2YyIsImdldFVzZXIiLCJoZWFkZXJzIiwiWC1BdXRoIiwidG9rZW4iLCJ2YWwiLCJkYXRhIl0sIm1hcHBpbmdzIjoiQUFBQSxHQUFBQSxLQUFBQyxRQUFBQyxPQUFBLE9BQ0EsV0NEQUQsU0FBQUMsT0FBQSxPQUNBQyxXQUFBLGFBQUEsU0FBQSxXQUFBLFNBQUFDLEVBQUFDLEdBQ0FELEVBQUFFLFFBQUEsV0FDQUYsRUFBQUcsVUFDQUYsRUFBQUcsUUFDQUMsU0FBQSxlQUNBQyxLQUFBTixFQUFBRyxXQUNBSSxRQUFBLFNBQUFDLEdBQ0FSLEVBQUFTLE1BQUFDLFFBQUFGLEdBQ0FSLEVBQUFHLFNBQUEsUUFLQUYsRUFBQVUsUUFBQUosUUFBQSxTQUFBRSxHQUNBVCxFQUFBUyxNQUFBQSxPQ2ZBWixRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsYUFBQSxTQUFBLFVBQUEsU0FBQUMsRUFBQVksR0FDQVosRUFBQWEsTUFBQSxTQUFBUixFQUFBUyxHQUNBRixFQUFBQyxNQUFBUixFQUFBUyxHQUNBQyxLQUFBLFNBQUFDLEdBQ0FDLFFBQUFDLElBQUFGLFNDTEFuQixRQUFBQyxPQUFBLE9BQ0FxQixRQUFBLFlBQUEsUUFBQSxTQUFBQyxHQUNBQyxLQUFBVixNQUFBLFdBQ0EsTUFBQVMsR0FBQUUsSUFBQSxlQUVBRCxLQUFBakIsT0FBQSxTQUFBSSxHQUNBLE1BQUFZLEdBQUFaLEtBQUEsYUFBQUEsT0NOQVgsUUFBQUMsT0FBQSxPQUNBeUIsUUFBQSxpQkFBQSxTQUFBQyxHQUNBQSxFQUNBQyxLQUFBLEtBQUExQixXQUFBLFlBQUEyQixZQUFBLGVBQ0FELEtBQUEsYUFBQTFCLFdBQUEsZUFBQTJCLFlBQUEsa0JBQ0FELEtBQUEsVUFBQTFCLFdBQUEsWUFBQTJCLFlBQUEsa0JDTEE3QixRQUFBQyxPQUFBLE9BQ0FxQixRQUFBLFdBQUEsUUFBQSxTQUFBQyxHQUNBLEdBQUFPLEdBQUFOLElBQ0FNLEdBQUFDLFFBQUEsV0FDQSxNQUFBUixHQUFBRSxJQUFBLGNBQ0FPLFNBQUFDLFNBQUFULEtBQUFVLFVBR0FKLEVBQUFkLE1BQUEsU0FBQVIsRUFBQVMsR0FDQSxNQUFBTSxHQUFBWixLQUFBLGlCQUNBSCxTQUFBQSxFQUFBUyxTQUFBQSxJQUNBQyxLQUFBLFNBQUFpQixHQUVBLE1BREFMLEdBQUFJLE1BQUFDLEVBQUFDLEtBQ0FOLEVBQUFDIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZShcImFwcFwiLCBbXG4gIFwibmdSb3V0ZVwiXG5dKVxuIiwiYW5ndWxhci5tb2R1bGUoXCJhcHBcIilcbi5jb250cm9sbGVyKFwiUG9zdHNDdHJsXCIsIGZ1bmN0aW9uKCRzY29wZSwgUG9zdHNTdmMpIHtcbiAgJHNjb3BlLmFkZFBvc3QgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAoJHNjb3BlLnBvc3RCb2R5KSB7XG4gICAgICBQb3N0c1N2Yy5jcmVhdGUoe1xuICAgICAgICB1c2VybmFtZTogXCJzanRpbmRlbGx4eHhcIixcbiAgICAgICAgYm9keTogJHNjb3BlLnBvc3RCb2R5XG4gICAgICB9KS5zdWNjZXNzKGZ1bmN0aW9uKHBvc3QpIHtcbiAgICAgICAgJHNjb3BlLnBvc3RzLnVuc2hpZnQocG9zdClcbiAgICAgICAgJHNjb3BlLnBvc3RCb2R5ID0gbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICBQb3N0c1N2Yy5mZXRjaCgpLnN1Y2Nlc3MoZnVuY3Rpb24ocG9zdHMpIHtcbiAgICAkc2NvcGUucG9zdHMgPSBwb3N0c1xuICB9KVxufSlcbiIsImFuZ3VsYXIubW9kdWxlKFwiYXBwXCIpXG4uY29udHJvbGxlcihcIkxvZ2luQ3RybFwiLCBmdW5jdGlvbigkc2NvcGUsIFVzZXJTdmMpIHtcbiAgJHNjb3BlLmxvZ2luID0gZnVuY3Rpb24odXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgVXNlclN2Yy5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpXG4gICAgLnRoZW4oZnVuY3Rpb24odXNlcikge1xuICAgICAgY29uc29sZS5sb2codXNlcilcbiAgICB9KVxuICB9XG59KVxuIiwiYW5ndWxhci5tb2R1bGUoXCJhcHBcIilcbi5zZXJ2aWNlKFwiUG9zdHNTdmNcIiwgZnVuY3Rpb24oJGh0dHApIHtcbiAgdGhpcy5mZXRjaCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiAkaHR0cC5nZXQoXCIvYXBpL3Bvc3RzXCIpXG4gIH1cbiAgdGhpcy5jcmVhdGUgPSBmdW5jdGlvbihwb3N0KSB7XG4gICAgcmV0dXJuICRodHRwLnBvc3QoXCIvYXBpL3Bvc3RzXCIsIHBvc3QpXG4gIH1cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZShcImFwcFwiKVxuLmNvbmZpZyhmdW5jdGlvbigkcm91dGVQcm92aWRlcikge1xuICAkcm91dGVQcm92aWRlclxuICAud2hlbihcIi9cIiwge2NvbnRyb2xsZXI6IFwiUG9zdHNDdHJsXCIsIHRlbXBsYXRlVXJsOiBcInBvc3RzLmh0bWxcIn0pXG4gIC53aGVuKFwiL3JlZ2lzdGVyXCIsIHtjb250cm9sbGVyOiBcIlJlZ2lzdGVyQ3RybFwiLCB0ZW1wbGF0ZVVybDogXCJyZWdpc3Rlci5odG1sXCJ9KVxuICAud2hlbihcIi9sb2dpblwiLCB7Y29udHJvbGxlcjogXCJMb2dpbkN0cmxcIiwgdGVtcGxhdGVVcmw6IFwibG9naW4uaHRtbFwifSlcbn0pXG4iLCJhbmd1bGFyLm1vZHVsZShcImFwcFwiKVxuLnNlcnZpY2UoXCJVc2VyU3ZjXCIsIGZ1bmN0aW9uKCRodHRwKSB7XG4gIHZhciBzdmMgPSB0aGlzXG4gIHN2Yy5nZXRVc2VyID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICRodHRwLmdldChcIi9hcGkvdXNlcnNcIiwge1xuICAgICAgaGVhZGVyczogeyBcIlgtQXV0aFwiOiB0aGlzLnRva2VuIH1cbiAgICB9KVxuICB9XG4gIHN2Yy5sb2dpbiA9IGZ1bmN0aW9uKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgIHJldHVybiAkaHR0cC5wb3N0KFwiL2FwaS9zZXNzaW9uc1wiLCB7XG4gICAgICB1c2VybmFtZTogdXNlcm5hbWUsIHBhc3N3b3JkOiBwYXNzd29yZFxuICAgIH0pLnRoZW4oZnVuY3Rpb24odmFsKSB7XG4gICAgICBzdmMudG9rZW4gPSB2YWwuZGF0YVxuICAgICAgcmV0dXJuIHN2Yy5nZXRVc2VyKClcbiAgICB9KVxuICB9XG59KVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
